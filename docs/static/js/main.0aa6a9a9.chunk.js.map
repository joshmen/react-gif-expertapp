{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAO,OACPC,MAAST,EACTU,SAlBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,IAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,OAAEQ,QAAF,IAAEA,GAAF,UAAEA,EAAKG,cAAP,iBAAE,EAAaC,wBAAf,aAAE,EAA+BZ,QAVzB,kBAeZM,GAfY,4CAAH,sDCCXO,EAAc,SAAC,GAAqB,IAAlBb,EAAiB,EAAjBA,IAAKU,EAAY,EAAZA,MAGhC,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAQf,EAAMgB,IAAQN,IAC3B,4BAAMA,QCJLO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAoBxC,OAbAC,qBAAU,WAENxB,EAASC,GACRwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIlB,CAACpB,IAGGqB,EDjB0BK,CAAc1B,GAAlCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAoDhB,EAApD,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADIA,EAAIC,aEd3BgB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,cAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAa9B,OACI,gCACI,qDACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEA,6BAEI2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAYA,GADLA,Y,MCnB3B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.0aa6a9a9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handeInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue, ...cats] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type = \"text\"\r\n                value = {inputValue}\r\n                onChange = { handeInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n    export const getGifs = async ( category ) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=jJmbPlYaIIgCmLhFNClMIfkIcS1JSg08`;\r\n    \r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img?.images?.downsized_medium?.url\r\n            }\r\n        });\r\n\r\n        //console.log(gifs);\r\n        return gifs;\r\n    }","import React from 'react';\r\n\r\nexport const GifGridItem = ( { url, title} ) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src = { url } alt = { title } />\r\n            <p>{  title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounce\"> {category} </h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem \r\n                            key = { img.id}\r\n                            {...img}\r\n                            />\r\n                        ))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs( category )\r\n        .then( imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        });\r\n\r\n    }, [category]);\r\n\r\n\r\n    return state; // { data: [], loading: true };\r\n\r\n}","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     // setCategories(\r\n    //     //     [...categories, 'que pedo?'] \r\n    //     // );\r\n    //     setCategories(\r\n    //         cats => [...cats, 'que pex?']\r\n    //     );\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Gif App by Josh Men</h2>\r\n            <AddCategory setCategories = {setCategories} />\r\n            <hr></hr>\r\n\r\n            <ol>\r\n            {\r\n                categories.map(category => (\r\n                    <GifGrid \r\n                    key = {category}\r\n                    category = {category} \r\n                    />\r\n                ))\r\n            }\r\n            </ol>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}